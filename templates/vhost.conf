# munin monitoring server configuration
#
server {
	listen {% if munin__use_ssl %}443 ssl{% else %}80{% endif %};
	listen [::]:{% if munin__use_ssl %}443 ssl{% else %}80{% endif %} ipv6only=on;
	server_name {{ munin__hostname }};

{% if munin__webserver_timeouts is defined %}
{% for k,v in munin__webserver_timeouts.items() %}
        proxy_{{ k }}_timeout {{ v }};
{% endfor %}
{% endif %}

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;
{% if munin__use_ssl %}
        ssl_certificate {{ munin__ssl_cert }};
        ssl_certificate_key {{ munin__ssl_key }};
	ssl_dhparam {{ munin__ssl_dhparam }};
{%   if munin__ssl_includefile %}
	include {{ munin__ssl_includefile }};
{%   endif %}

     	# For SSL check
        location /.well-known/ {
		 alias /var/cache/munin/www/.well-known/;
	}

{% endif %}
	root /var/cache/munin/www;
	index index.html;

# 	location / {
# 		# First attempt to serve request as file, then
# 		# as directory, then fall back to displaying a 404.
# 		try_files $uri $uri/ =404;
# 	}

{% if munin__webserver_strategy == 'cgi' %}
	# pass scripts to FastCGI server
	location ^~ /munin-cgi/munin-cgi-graph/ {
		 fastcgi_split_path_info ^(/munin-cgi/munin-cgi-graph)(.*);
    	    	 fastcgi_param PATH_INFO $fastcgi_path_info;
    	    	 fastcgi_pass unix:/var/run/munin/fastcgi-graph.sock;
	    	 include fastcgi_params;
	}
{% endif %}

	location /static/ {
    		 alias /etc/munin/static/;
	}

{% if munin__webserver_strategy == 'cgi' %}
	location / {
    		 fastcgi_split_path_info ^(/)(.*);
    		 fastcgi_param PATH_INFO $fastcgi_path_info;
    		 fastcgi_pass unix:/var/run/munin/fastcgi-html.sock;
    		 include fastcgi_params;
	}
{% endif %}


	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}
{% if munin__use_ssl %}

server {
   if ($host = {{ munin__hostname }}) {
       return 301 https://$host$request_uri;
   }


	listen 80;
	listen [::]:80 ipv6only=on;
	server_name {{ munin__hostname }};
   return 404;
}
{% endif %}
